---
- name: Print ansible_hostname
  debug: var=ansible_hostname

- name: Print inventory_hostname
  debug: var=inventory_hostname

- name: Print testnet information
  debug: var=hostvars[inventory_hostname].testnet

- name: Print alias
  debug: var=hostvars[inventory_hostname].alias

- name: Print ansible_hostname
  debug: var=ansible_host

- name: Set environment variables.
  copy:
    dest: /etc/environment
    content: |
      {{ lookup('file', 'vars/.env') }}
  become: yes

- name: Set AWS_ACCESS_KEY_ID
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^AWS_ACCESS_KEY_ID"
    line: "AWS_ACCESS_KEY_ID={{ aws_access_key }}"
  become: yes

- name: Set AWS_SECRET_ACCESS_KEY
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^AWS_SECRET_ACCESS_KEY"
    line: "AWS_SECRET_ACCESS_KEY={{ aws_secret_key }}"
  become: yes

- name: Set AWS_REGION
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^AWS_REGION"
    line: "AWS_REGION={{ aws_region }}"
  become: yes

# - name: Set NODE_SCHEME
#   lineinfile:
#     dest: /etc/environment
#     create: yes
#     state: present
#     regexp: "^NODE_SCHEME"
#     line: "NODE_SCHEME={{ hostvars[inventory_hostname].scheme }}"
#   become: yes

- name: Set NODE_DOMAIN
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^NODE_DOMAIN"
    line: "NODE_DOMAIN={{ inventory_hostname }}"
  become: yes

- name: Set PUBLIC_URL
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^PUBLIC_URL"
    line: "PUBLIC_URL={{ hostvars[inventory_hostname].scheme }}://{{ inventory_hostname }}"
  become: yes

- name: Set NODE_IP
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^NODE_IP"
    line: "NODE_IP={{ ansible_host }}"
  become: yes

- name: Set NODE_ALIAS
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^NODE_ALIAS"
    line: "NODE_ALIAS={{ hostvars[inventory_hostname].alias }}"
  become: yes

- name: Set COMMUNITIES_HOST
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^COMMUNITIES_HOST"
    line: "COMMUNITIES_HOST={{ communities_host }}"
  become: yes
  when: not hostvars[inventory_hostname].testnet

- name: Set COMMUNITIES_HOST
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^COMMUNITIES_HOST"
    line: "COMMUNITIES_HOST={{ communities_host_staging }}"
  become: yes
  when: hostvars[inventory_hostname].testnet

- name: Set MEDIA_HOST_PROTOCOL
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^MEDIA_HOST_PROTOCOL"
    line: "MEDIA_HOST_PROTOCOL={{ media_host_protocol }}"
  become: yes

- name: Set MEDIA_HOST
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^MEDIA_HOST"
    line: "MEDIA_HOST={{ media_host }}"
  become: yes
  when: not hostvars[inventory_hostname].testnet

- name: Set MEDIA_HOST
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^MEDIA_HOST"
    line: "MEDIA_HOST={{ media_host_staging }}"
  become: yes
  when: hostvars[inventory_hostname].testnet

- name: Set MACAROON_LOCATION
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^MACAROON_LOCATION"
    line: "MACAROON_LOCATION=/relay/.lnd/data/chain/bitcoin/testnet/admin.macaroon"
  become: yes
  when: hostvars[inventory_hostname].testnet

- name: Set MACAROON_LOCATION
  lineinfile:
    dest: /etc/environment
    create: yes
    state: present
    regexp: "^MACAROON_LOCATION"
    line: "MACAROON_LOCATION=/relay/.lnd/data/chain/bitcoin/mainnet/admin.macaroon"
  become: yes
  when: not hostvars[inventory_hostname].testnet

- name: Mkdir client path dir
  file:
    path: "{{ src_path }}"
    state: directory
    owner: ubuntu
  become: true
  tags: provisioning

- name: add github private ssh key
  copy: >
    src=~/.ssh/id_rsa.github
    dest=/root/.ssh/id_rsa.github
    owner=root
    group=root
    mode=0600
  become: yes

- name: add github public ssh key
  copy: >
    src=~/.ssh/id_rsa.github.pub
    dest=/root/.ssh/id_rsa.github.pub
    owner=root
    group=root
    mode=0600
  become: yes

- name: configure ssh to use ansible key for github.com
  template: >
    src=templates/ssh_config.j2
    dest=/root/.ssh/config
    owner=root
    group=root
    mode=0644
  become: yes

- name: Add and load private key to ssh-agent
  shell: "eval `ssh-agent -s` && ssh-add /root/.ssh/id_rsa.github"
  become: yes

- name: Set authorized key took from file
  authorized_key:
    user: root
    state: present
    key: "{{ lookup('file', '~/.ssh/id_rsa.github.pub') }}"
  become: yes

- name: clone a private repository
  git: >
    repo={{ git_repo }}
    key_file=/root/.ssh/id_rsa.github
    dest={{ src_path }}
    version={{ git_branch }}
    force=yes
    update=yes
  become: yes

- name: Modify .profile
  lineinfile:
    dest: ~/.profile
    create: yes
    state: present
    line: "cd {{ src_path }}"

- name: Modify .profile
  lineinfile:
    dest: ~/.profile
    create: yes
    state: present
    line: "sudo -s"

- name: Setup .lnd
  shell: "cd {{ src_path }} && mkdir .lnd && cp docker/lnd.sample.conf .lnd/lnd.conf"
  become: yes
  when: not hostvars[inventory_hostname].testnet

- name: Setup .lnd
  shell: |
    NODE_ALIAS={{ hostvars[inventory_hostname].alias }}
    awk -v n=3 -v s="alias=$NODE_ALIAS" 'NR == n {print s} {print}' {{ src_path }}/docker/lnd.sample.conf > {{ src_path }}/.lnd/lnd.conf
  become: yes
  when: not hostvars[inventory_hostname].testnet

# - name: Modify thunderhub accounts.
#   template: >
#     src=templates/thubConfig.yaml.j2
#     dest=/box/.lnd/thubConfig.yaml
#     owner=root
#     group=root
#     mode=0644
#   become: yes

# - name: Create thunderhub .cookie
#   shell: "touch /box/.lnd/.cookie"
#   become: yes

- name: Start container [proxy]
  shell: "cd {{ src_path }} && docker-compose -f docker-compose.proxy.yml up -d"
  become: yes
  when: not hostvars[inventory_hostname].testnet

- name: Start container [relay]
  shell: "cd {{ src_path }} && docker-compose up -d"
  become: yes
  when: not hostvars[inventory_hostname].testnet

- name: Start container [relay] [testnet]
  shell: "cd {{ src_path }} && docker-compose -f docker-compose-testnet.yml up -d"
  become: yes
  when: hostvars[inventory_hostname].testnet
